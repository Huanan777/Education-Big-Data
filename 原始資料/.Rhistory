的
直
方
圖") +
xlab("
總
計") +
ylab("
頻
率") +
labs(fill="
學
校
名
稱")
#
繪
製
直
方
圖
，
不
設
置
透
明
度
，
使
顏
色
飽
滿
ggplot(data1, aes(x=
總
計, fill=
學
校
名
稱)) +
geom_histogram(binwidth=15, color="black", position="identity") + #
去
除
透
明
度
scale_fill_manual(values = custom_colors) + #
自
定
義
顏
色
ggtitle("B
學
士
等
級
不
同
學
校
的
直
方
圖") +
xlab("
總
計") +
ylab("
頻
率") +
labs(fill="
學
校
名
稱")
#
繪
製
直
方
圖
，
不
設
置
透
明
度
，
使
顏
色
飽
滿
ggplot(data1, aes(x=
總
計, fill=
學
校
名
稱)) +
geom_histogram(binwidth=20, color="black", position="identity") + #
去
除
透
明
度
scale_fill_manual(values = custom_colors) + #
自
定
義
顏
色
ggtitle("B
學
士
等
級
不
同
學
校
的
直
方
圖") +
xlab("
總
計") +
ylab("
頻
率") +
labs(fill="
學
校
名
稱")
#
繪
製
核
密
度
估
計
圖
，
保
留
一
定
的
透
明
度
，
避
免
顏
色
過
於
重
疊
ggplot(data1, aes(x=
總
計, fill=
學
校
名
稱)) +
geom_density(alpha=0.5) + #
保
持
一
定
透
明
度
scale_fill_manual(values = custom_colors) + #
自
定
義
顏
色
ggtitle("B
學
士
等
級
不
同
學
校
的
核
密
度
估
計
圖") +
xlab("
總
計") +
ylab("
密
度") +
labs(fill="
學
校
名
稱")
#
繪
製
直
方
圖
，
不
設
置
透
明
度
，
使
顏
色
飽
滿
ggplot(data1, aes(x=
總
計, fill=
學
校
名
稱)) +
geom_histogram(binwidth=20, color="black", position="identity") + #
去
除
透
明
度
scale_fill_manual(values = custom_colors) + #
自
定
義
顏
色
ggtitle("B
學
士
等
級
不
同
學
校
的
直
方
圖") +
xlab("
總
計") +
ylab("
頻
率") +
labs(fill="
學
校
名
稱")
q()
q()
# 載入數據
data <- read.table("C:\Users\huann\OneDrive\文件\睡眠時間.xlsx",header=T)
# 載入數據
data <- read.table("C:\\Users\\huann\\OneDrive\\文件\\睡眠時間.xlsx",header=T)
# 載入數據
data <- read.csv("C:\\Users\\huann\\OneDrive\\文件\\睡眠時間.csv",header=T)
# 安裝所需套件（如未安裝）
if (!require("agricolae")) install.packages("agricolae")
# 載入套件
library(agricolae)
# 載入數據
data <- read.csv("C:\\Users\\huann\\OneDrive\\文件\\睡眠時間.csv",header=T)
# 隨機完全區組設計（RCBD）
rcbd_model <- aov(DeepSleep ~ factor(Date), data = data)
View(data)
# 隨機完全區組設計（RCBD）
rcbd_model <- aov(深眠.分鐘. ~ factor(X), data = data)
# 安裝所需套件（如未安裝）
if (!require("agricolae")) install.packages("agricolae")
# 載入套件
library(agricolae)
# 匯入數據
file_path <- "睡眠時間.csv"
data <- read.csv(file_path)
# 確保數據格式正確
data$Day <- factor(data$Day, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
# 安裝所需套件（如未安裝）
if (!require("agricolae")) install.packages("agricolae")
if (!require("tidyverse")) install.packages("tidyverse")
# 載入套件
library(agricolae)
library(tidyverse)
# 匯入數據
file_path <- "睡眠時間.csv"
data <- read.csv(file_path, stringsAsFactors = FALSE)
# 數據轉換
# 增加星期欄位
data$Day <- weekdays(as.Date(data[[1]]))
# 數據長格式化，深眠與淺眠作為處理（Treatment）
data_long <- data %>%
pivot_longer(cols = c("深眠.分鐘.", "淺眠.分鐘."),
names_to = "Treatment",
values_to = "Response") %>%
mutate(Treatment = ifelse(Treatment == "深眠.分鐘.", "DeepSleep", "LightSleep"))
# 將 Day 轉為因子
data_long$Day <- factor(data_long$Day,
levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
# 確認數據結構
print("數據結構：")
print(str(data_long))
# 隨機完全區組設計（RCBD）
rcbd_model <- aov(Response ~ Treatment + Day, data = data_long)
View(rcbd_model)
View(rcbd_model)
View(data_long)
View(data_long)
View(data_long)
View(data)
# 匯入數據
file_path <- "睡眠時間.csv"
data <- read.csv(file_path, stringsAsFactors = FALSE)
# 確保日期欄位的名稱正確並轉換為日期格式
colnames(data)[1] <- "Date"  # 確保第一欄是日期欄位
data$Date <- as.Date(data$Date, format = "%Y/%m/%d")  # 根據日期格式進行轉換
# 增加星期欄位
data$Day <- weekdays(data$Date)
# 數據長格式化，深眠與淺眠作為處理（Treatment）
data_long <- data %>%
pivot_longer(cols = c("深眠.分鐘.", "淺眠.分鐘."),
names_to = "Treatment",
values_to = "Response") %>%
mutate(Treatment = ifelse(Treatment == "深眠.分鐘.", "DeepSleep", "LightSleep"))
# 將 Day 轉為因子
data_long$Day <- factor(data_long$Day,
levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
# 隨機完全區組設計（RCBD）
rcbd_model <- aov(Response ~ Treatment + Day, data = data_long)
data_long <- data %>%
pivot_longer(cols = c("深眠.分鐘.", "淺眠.分鐘."),
names_to = "Treatment",
values_to = "Response") %>%
mutate(Treatment = ifelse(Treatment == "深眠.分鐘.", "DeepSleep", "LightSleep"))
# 將 Day 轉為因子
data_long$Day <- factor(data_long$Day)
# 隨機完全區組設計（RCBD）
rcbd_model <- aov(Response ~ Treatment + Day, data = data_long)
# 輸出 ANOVA 表
anova_table <- summary(rcbd_model)
print("ANOVA 表：")
print(anova_table)
# 事後檢定（Tukey HSD）
posthoc_test <- HSD.test(rcbd_model, "Treatment", group = TRUE, console = TRUE)
# 輸出事後檢定結果
print("事後檢定結果：")
# 輸出事後檢定結果
print("事後檢定結果：")
print(treatment_test)
# 事後檢定（Tukey HSD）
treatment_test <- HSD.test(rcbd_model, "Treatment", group = TRUE, console = TRUE)
Day_test <- HSD.test(rcbd_model, "Day", group = TRUE, console = TRUE)
print("事後檢定結果：")
print(treatment_test)
print(Day_test)
print("事後檢定結果：")
print(treatment_test)
print(Day_test)
print(Day_test)
plot(treatment_test)
print(Day_test)
plot(Day_test)
# 安裝所需套件（如未安裝）
if (!require("agricolae")) install.packages("agricolae")
if (!require("tidyverse")) install.packages("tidyverse")
# 載入套件
library(agricolae)
library(tidyverse)
# 匯入數據
file_path <- "睡眠時間.csv"
data <- read.csv(file_path, stringsAsFactors = FALSE)
# 確保日期欄位的名稱正確並轉換為日期格式
colnames(data)[1] <- "Date"  # 確保第一欄是日期欄位
data$Date <- as.Date(data$Date, format = "%Y/%m/%d")  # 根據日期格式進行轉換
# 增加星期欄位
data$Day <- weekdays(data$Date)
# 數據長格式化，深眠與淺眠作為處理（Treatment）
data_long <- data %>%
pivot_longer(cols = c("深眠.分鐘.", "淺眠.分鐘."),
names_to = "Treatment",
values_to = "Response") %>%
mutate(Treatment = ifelse(Treatment == "深眠.分鐘.", "DeepSleep", "LightSleep"))
# 將 Day 轉為因子
data_long$Day <- factor(data_long$Day)
# 隨機完全區組設計（RCBD）
rcbd_model <- aov(Response ~ Treatment + Day, data = data_long)
# 輸出 ANOVA 表
anova_table <- summary(rcbd_model)
print("ANOVA 表：")
print(anova_table)
# 事後檢定（Tukey HSD）
treatment_test <- HSD.test(rcbd_model, "Treatment", group = TRUE, console = TRUE)
Day_test <- HSD.test(rcbd_model, "Day", group = TRUE, console = TRUE)
# 輸出事後檢定結果
print("事後檢定結果：")
print(treatment_test)
plot(treatment_test)
print(Day_test)
plot(Day_test)
plot(treatment_test)
# 事後檢定（Tukey HSD）
treatment_test <- HSD.test(rcbd_model, "Treatment", group = TRUE, console = TRUE)
Day_test <- HSD.test(rcbd_model, "Day", group = TRUE, console = TRUE)
anova_table <- summary(rcbd_model)
print("ANOVA 表：")
print(anova_table)
print("事後檢定結果：")
print(treatment_test)
plot(treatment_test)
print(Day_test)
plot(Day_test)
print(treatment_test)
print(treatment_test)
print(Day_test)
---
title: "HW5"
getwd()
install.packages('installr')
library(installr)
updateR()
library(lavaan)
library(lavaan)
library(psych)
library(lavaan)
library(psych)
library(factoextra)
data1 <- read.csv("data_1.csv", stringsAsFactors = FALSE)
install.packages("lavaan")
install.packages("psych")
install.packages("factoextra")
library(lavaan)
install.packages("lavaan")
library(lavaan)
library(psych)
library(factoextra)
data1 <- read.csv("data_1.csv", stringsAsFactors = FALSE)
ED.model <- '
future =~ x1 + x2 + x3 + x4 + x5
barrier =~ x6 + x7
efficiency =~ m1 + m2 + m3 + m4 + m5
outcome =~ m6 + m7 + m8
interest =~ y1 + y2 + y3
hope =~ y5 + y6 + y7
'
model.fit <- cfa(ED.model, data = data1)
Summary(model.fit, fit.measures = TRUE)
install.packages("lavaan")
install.packages("lavaan")
install.packages("psych")
install.packages("factoextra")
library(lavaan)
library(psych)
library(factoextra)
data1 <- read.csv("data_1.csv", stringsAsFactors = FALSE)
ED.model <- '
future =~ x1 + x2 + x3 + x4 + x5
barrier =~ x6 + x7
efficiency =~ m1 + m2 + m3 + m4 + m5
outcome =~ m6 + m7 + m8
interest =~ y1 + y2 + y3
hope =~ y5 + y6 + y7
'
model.fit <- cfa(ED.model, data = data1)
Summary(model.fit, fit.measures = TRUE)
data1 <- read.csv("data_1.csv", stringsAsFactors = FALSE)
getwd
setwd("C:\\Users\\huann\\OneDrive\\Desktop\\Education Big Data\\原始資料")
data1 <- read.csv("data_1.csv", stringsAsFactors = FALSE)
data1 <- read.csv("data_1.csv", stringsAsFactors = FALSE)
eigenvalues <- eigen(cor(data1))$values
sum(is.na(data1))
sum(is.na(data1))
data1_complete <- na.omit(data1)
eigenvalues <- eigen(cor(data1_complete))$values
print(eigenvalues)
View(data1_complete)
View(data1_complete)
print(efa_result)
efa_result <- fa(r = data1_complete, nfactors = 6, rotate = "varimax")
print(efa_result)
data1_complete <- na.omit(data1)
data_items <- data1_complete[ ,grep("^v[0-9]+$" ,names(data1_complete))]
eigenvalues <- eigen(cor(data_items))$values
print(eigenvalues)
efa_result <- fa(r = data_items, nfactors = 6, rotate = "varimax")
print(efa_result)
